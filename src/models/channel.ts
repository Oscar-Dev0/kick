import { Client } from "../package";
import { ITF_Channel as Ch } from "../types";
import { Chatroom } from "./chatroom";
import { User } from "./user";

export class Channel {
    public id: number;
    public user_id: number;
    public slug: string;
    public is_banned: boolean;
    public playback_url: string;
    public name_updated_at: string | null;
    public vod_enabled: boolean;
    public subscription_enabled: boolean;
    public followersCount: number;
    public subscriber_badges: any[];
    public banner_image: string | null;
    public recent_categories: any[];
    public livestream: any;
    public role: string | null;
    public muted: boolean;
    public follower_badges: any[];
    public offline_banner_image: string | null;
    public can_host: boolean;
    public chatroom: Chatroom;
    public user: User;
    public ascending_links: any[];
    public plan: any;
    public previous_livestreams: any[];
    public verified: any;
    public media: any[];
    public client: Client;

    constructor(data: Ch, client: Client) {
        Object.defineProperty(this, "client", { value: client });
        this.id = data.id;
        this.user_id = data.user_id;
        this.slug = data.slug;
        this.is_banned = data.is_banned;
        this.playback_url = data.playback_url;
        this.name_updated_at = data.name_updated_at;
        this.vod_enabled = data.vod_enabled;
        this.subscription_enabled = data.subscription_enabled;
        this.followersCount = data.followersCount;
        this.subscriber_badges = data.subscriber_badges;
        this.banner_image = data.banner_image;
        this.recent_categories = data.recent_categories;
        this.livestream = data.livestream;
        this.role = data.role;
        this.muted = data.muted;
        this.follower_badges = data.follower_badges;
        this.offline_banner_image = data.offline_banner_image;
        this.can_host = data.can_host;
        this.ascending_links = data.ascending_links;
        this.plan = data.plan;
        this.previous_livestreams = data.previous_livestreams;
        this.verified = data.verified;
        this.media = data.media;
        this.user = new User(data.user);
        this.chatroom = new Chatroom(data.chatroom, client);
    };
};
